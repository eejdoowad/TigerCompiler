tiger-program -> #start LET declaration-segment IN stat-seq #end END
declaration-segment -> type-declaration-list var-declaration-list funct-declaration-list
type-declaration-list -> EPSILON
type-declaration-list -> type-declaration #semaAttachTypeDec type-declaration-list
var-declaration-list -> EPSILON
var-declaration-list -> var-declaration #semaAttachVarDec var-declaration-list
funct-declaration-list -> EPSILON
funct-declaration-list -> funct-declaration #semaAttachFunDec funct-declaration-list
type-declaration -> TYPE ID #semaIdentifier EQ type SEMI #semaTypeDec
type -> type-id
type -> ARRAY LBRACK INTLIT #semaIntLit RBRACK OF type-id #semaArrayType
type -> ID #semaIdentifier
type-id -> INT #semaIdentifier
type-id -> FLOAT #semaIdentifier
var-declaration -> VAR id-list COLON type optional-init SEMI #semaVarDec
id-list -> ID #semaIdentifier id-list-tail
id-list-tail -> COMMA ID #semaIdentifier id-list-tail
id-list-tail -> EPSILON
optional-init -> EPSILON
optional-init -> ASSIGN const
const -> INTLIT #semaIntLit
const -> FLOATLIT #semaFloatLit
funct-declaration -> FUNC ID LPAREN param-list RPAREN ret-type BEGIN stat-seq END SEMI
param-list -> EPSILON
param-list -> param param-list-tail
param-list-tail -> EPSILON
param-list-tail -> COMMA param param-list-tail
ret-type -> EPSILON
ret-type -> COLON type
param -> ID COLON type
stat-seq -> stat stat-seq-tail
stat-seq-tail -> stat stat-seq-tail
stat-seq-tail -> EPSILON
stat -> #p-if IF expr THEN stat-seq stat-if-tail SEMI #a-if
stat -> WHILE expr DO stat-seq ENDDO SEMI
stat -> FOR ID ASSIGN expr TO expr DO stat-seq ENDDO SEMI
stat -> BREAK SEMI
stat -> RETURN expr SEMI
stat -> ID #semaIdentifier stat-id-tail SEMI
stat-id-tail -> ASSIGN stat-assign-tail #semaAssign
stat-id-tail -> LBRACK expr RBRACK ASSIGN stat-assign-tail #semaAssign
stat-id-tail -> LPAREN expr-list RPAREN
stat-assign-tail -> LPAREN term0 RPAREN term5' term4' term3' term2' term1' term0'
stat-assign-tail -> const term5' term4' term3' term2' term1' term0'
stat-assign-tail -> ID #semaVarRef stat-assign-id-tail
stat-assign-id-tail -> LPAREN expr-list RPAREN
stat-assign-id-tail -> opt-index term5' term4' term3' term2' term1' term0'
stat-if-tail -> ENDIF
stat-if-tail -> ELSE stat-seq ENDIF
expr -> term0
term0 -> term1 term0'
term0' -> OR term1 #semaOr term0'
term0' -> EPSILON
term1 -> term2 term1'
term1' -> AND term2 #semaAnd term1'
term1' -> EPSILON
term2 -> term3 term2'
term2' -> GREATER term3 #semaGreater term2'
term2' -> LESSER term3 #semaLesser term2'
term2' -> GREATEREQ term3 #semaGreaterEq term2'
term2' -> LESSEREQ term3 #semaLesserEq term2'
term2' -> EPSILON
term3 -> term4 term3'
term3' -> EQ term4 #semaEq term3'
term3' -> NEQ term4 #semaNeq term3'
term3' -> EPSILON
term4 -> term5 term4'
term4' -> PLUS term5 #semaPlus term4'
term4' -> MINUS term5 #semaMinus term4'
term4' -> EPSILON
term5 -> term6 term5'
term5' -> MULT term6 #semaMult term5'
term5' -> DIV term6 #semaDiv term5'
term5' -> EPSILON
term6 -> LPAREN term0 RPAREN
term6 -> const
term6 -> ID #semaVarRef opt-index
opt-index -> LBRACK expr RBRACK #semaVarRefIndex
opt-index -> EPSILON #semaVarRefArrayCheck
expr-list -> EPSILON
expr-list -> expr expr-list-tail
expr-list-tail -> COMMA expr expr-list-tail
expr-list-tail -> EPSILON